name: Create Docker Container

on: [push]

jobs:
  mlops-container:
    runs-on: ubuntu-latest
    env:
      GCS_TRAINED_MODELS_BUCKET_URI: ${{ vars.GCS_TRAINED_MODELS_BUCKET_URI }}
      GCR_HOST: ${{ vars.GCR_HOST }}
      GCR_REPOSITORY: ${{ vars.GCR_REPOSITORY }}


    defaults:
      run:
        working-directory: ./gcr
    steps:
      - name: Checkout Reposiotry
        uses: actions/checkout@v4
        with:
          # Repository name with owner. For example, actions/checkout
          repository: ${{ github.repository }}
          # The branch, tag or SHA to checkout. When checking out the repository that
          # triggered a workflow, this defaults to the reference or SHA for that event.
          # Otherwise, uses the default branch.
          ref: ${{ github.ref }}
          # token: ${{ env.GITHUB_TOKEN }}

      - name: Configure GCP Credentials
        uses: nightstory/gcp-secrets-action@v1
        with:
          gcp_credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}
          template_file: ./.github/template.yaml

      - name: Build Docker Image
        run: |
            echo "Trained Models Bucket URI: $GCS_TRAINED_MODELS_BUCKET_URI"
            echo "GCR Host: $GCR_HOST"
            echo "GCR Repository: $GCR_REPOSITORY"

            COMMIT_HASH=$(git rev-parse --short HEAD)
            IMAGE_TAG=$(git describe --tags --always)

            echo "Commit Hash: $COMMIT_HASH"
            echo "Image Tag: $IMAGE_TAG"

            docker build --tag inference:latest --tag inference:$IMAGE_TAG --tag inference:$COMMIT_HASH .
            docker run -d -p 8000:8000 --name inference_container inference:latest


      # - name: Push Docker Image to GCR
      #   uses: raccoondev/push-docker-gcr
      #   with:
      #     gcr_host: ${{ variables.GCR_HOST}}
      #     image_name: ${{ secrets.GCP_PROJECT_ID }}/${{ variables.GCR_REPOSITORY }}/inference
      #     image_tag: latest
          # env:
          #   GCLOUD_SERVICE_KEY: ${{ secrets.GCP_CREDENTIALS_JSON }}
          #   GOOGLE_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
